/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LoginFrame.java
 *
 * Created on 04.01.2011, 23:05:45
 */
package lostfilmnews;

import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.ArrayList;

/**
 *
 * @author Polyansky Vladislav
 */
public class LoginFrame extends javax.swing.JFrame {

    private MainFrame frame = null;

    /** Creates new form LoginFrame */
    public LoginFrame(MainFrame frame) {
        this.frame = frame;
        if (autologged()) {
            boolean b = frame.loginEnter(getLogin(), getPass());
            if (b) {
                frame.start();
                this.dispose();
                return;
            }
        }
        initComponents();
        
        ArrayList<Component> arr = new ArrayList<Component>();
        arr.add(loginField);
        arr.add(passwordField);
        arr.add(rememberCheckBox);
        MyOwnFocusTraversalPolicy ftp = new MyOwnFocusTraversalPolicy(arr);
        setFocusTraversalPolicy(ftp);
        

        this.setIconImage(frame.getIconImage());
        this.setLocation((Toolkit.getDefaultToolkit().getScreenSize().width - this.getWidth()) / 2,
                (Toolkit.getDefaultToolkit().getScreenSize().height - this.getHeight()) / 2);
        this.setVisible(true);
    }


    public boolean autologged() {
        if (frame.mainnode.get("login", null) != null
                && frame.mainnode.get("pass", null) != null
                && !frame.mainnode.get("auto", "no").equals("no")) {
            return true;
        } else {
            return false;
        }
    }


    public String getLogin() {
        return frame.mainnode.get("login", null);
    }


    public String getPass() {
        return frame.mainnode.get("pass", null);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        loginField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        rememberCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Authorization");
        setFocusable(false);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel1.setText("Логин");

        loginField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginFieldKeyPressed(evt);
            }
        });

        jLabel2.setText("Пароль");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
        });

        rememberCheckBox.setSelected(true);
        rememberCheckBox.setText("Запомнить");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(loginField, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rememberCheckBox)
                        .addGap(31, 31, 31)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(rememberCheckBox)
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean b = frame.loginEnter(loginField.getText(), new String(passwordField.getPassword()));
        if (b) {
            if (rememberCheckBox.isSelected()) {
                frame.mainnode.put("login", loginField.getText());
                frame.mainnode.put("pass", new String(passwordField.getPassword()));
                frame.mainnode.put("auto", "yes");
            } else {
                frame.mainnode.put("auto", "no");
            }
            frame.start();
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButton1ActionPerformed(null);
        }
    }//GEN-LAST:event_formKeyPressed

    private void loginFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButton1ActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            passwordField.grabFocus();
        }
    }//GEN-LAST:event_loginFieldKeyPressed

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButton1ActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            loginField.grabFocus();
        }
    }//GEN-LAST:event_passwordFieldKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField loginField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JCheckBox rememberCheckBox;
    // End of variables declaration//GEN-END:variables

    public static class MyOwnFocusTraversalPolicy
            extends FocusTraversalPolicy {

        ArrayList<Component> order;

        public MyOwnFocusTraversalPolicy(ArrayList<Component> order) {
            this.order = new ArrayList<Component>(order.size());
            this.order.addAll(order);
        }


        public Component getComponentAfter(Container focusCycleRoot,
                Component aComponent) {
            int idx = (order.indexOf(aComponent) + 1) % order.size();
            System.out.println(idx);
            return order.get(idx);
        }


        public Component getComponentBefore(Container focusCycleRoot,
                Component aComponent) {
            int idx = order.indexOf(aComponent) - 1;
            if (idx < 0) {
                idx = order.size() - 1;
            }
            return order.get(idx);
        }


        public Component getDefaultComponent(Container focusCycleRoot) {
            return order.get(0);
        }


        public Component getLastComponent(Container focusCycleRoot) {
            return order.get(order.size() - 1);
        }


        public Component getFirstComponent(Container focusCycleRoot) {
            return order.get(0);
        }


    }

}
